In Python, there are several types of loops that you can use to control the flow of your code. The most commonly used loop structures are for loops and while loops. Here are some combinations of loops and loop control statements you can use:

for Loop:
Basic for loop to iterate over a sequence.
for loop with break statement to exit the loop prematurely.
for loop with continue statement to skip the current iteration and continue to the next one.
Nested for loops for iterating over multiple sequences.
python
Copy code
for item in sequence:
    # Loop body

for item in sequence:
    if condition:
        break
    # Loop body

for item in sequence:
    if condition:
        continue
    # Loop body

for item1 in sequence1:
    for item2 in sequence2:
        # Nested loop body
while Loop:
Basic while loop to repeat a block of code while a condition is True.
while loop with break statement to exit the loop prematurely.
while loop with continue statement to skip the current iteration and continue to the next one.
python
Copy code
while condition:
    # Loop body

while condition:
    if condition:
        break
    # Loop body

while condition:
    if condition:
        continue
    # Loop body
Combining for and while Loops:
Using a for loop to iterate over a sequence and a while loop to perform additional operations.
Using a while loop with a counter variable to achieve custom control.
python
Copy code
for item in sequence:
    while condition:
        # Loop body

while counter < limit:
    # Loop body
    counter += 1
Loop Control Statements:
Using loop control statements like break and continue within nested loops to control their behavior.
python
Copy code
for i in range(5):
    for j in range(5):
        if condition:
            break  # Breaks out of the innermost loop
        elif another_condition:
            continue  # Skips the current iteration and continues to the next one
    # Loop body for the outer loop
These are the basic loop combinations possible in Python, and you can mix and match them as needed to achieve the desired control flow in your programs.




